package ru.publicapi.site.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DirectoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDirectoryAllPropertiesEquals(Directory expected, Directory actual) {
        assertDirectoryAutoGeneratedPropertiesEquals(expected, actual);
        assertDirectoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDirectoryAllUpdatablePropertiesEquals(Directory expected, Directory actual) {
        assertDirectoryUpdatableFieldsEquals(expected, actual);
        assertDirectoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDirectoryAutoGeneratedPropertiesEquals(Directory expected, Directory actual) {
        assertThat(expected)
            .as("Verify Directory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDirectoryUpdatableFieldsEquals(Directory expected, Directory actual) {
        assertThat(expected)
            .as("Verify Directory relevant properties")
            .satisfies(e -> assertThat(e.getDirectoryName()).as("check directoryName").isEqualTo(actual.getDirectoryName()))
            .satisfies(e -> assertThat(e.getUrlAPI()).as("check urlAPI").isEqualTo(actual.getUrlAPI()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getIsPublic()).as("check isPublic").isEqualTo(actual.getIsPublic()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDirectoryUpdatableRelationshipsEquals(Directory expected, Directory actual) {
        // empty method
    }
}
